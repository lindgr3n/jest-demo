// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Test> Snapshot should match number of elements 1`] = `3`;

exports[`<Test> Snapshottesting 1`] = `
<div
  className="my-component"
>
  <i
    className="icon-test-1"
  >
    One
  </i>
  <br />
  <i
    className="icon-test-2"
  >
    Two
  </i>
  <br />
  <i
    className="icon-test-3"
  >
    Three
  </i>
</div>
`;

exports[`<Test> Snapshottesting with enzyme 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="my-component"
>
    <i
        className="icon-test-1"
    >
        One
    </i>
    <br />
    <i
        className="icon-test-2"
    >
        Two
    </i>
    <br />
    <i
        className="icon-test-3"
    >
        Three
    </i>
</div>,
  "nodes": Array [
    <div
      className="my-component"
>
      <i
            className="icon-test-1"
      >
            One
      </i>
      <br />
      <i
            className="icon-test-2"
      >
            Two
      </i>
      <br />
      <i
            className="icon-test-3"
      >
            Three
      </i>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Test />,
      "_debugID": 18,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Test {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="my-component"
>
          <i
                    className="icon-test-1"
          >
                    One
          </i>
          <br />
          <i
                    className="icon-test-2"
          >
                    Two
          </i>
          <br />
          <i
                    className="icon-test-3"
          >
                    Three
          </i>
</div>,
        "_debugID": 19,
        "_renderedOutput": <div
          className="my-component"
>
          <i
                    className="icon-test-1"
          >
                    One
          </i>
          <br />
          <i
                    className="icon-test-2"
          >
                    Two
          </i>
          <br />
          <i
                    className="icon-test-3"
          >
                    Three
          </i>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Test />,
}
`;
